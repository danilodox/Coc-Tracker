name: Android CI & Security Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-scan:

    runs-on: ubuntu-latest

    steps:
    - name: 🔄 Checkout code
      uses: actions/checkout@v4

    - name: ☕️ Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: ⚙️ Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          gradle-${{ runner.os }}

    - name: 🧼 Grant execute permission for gradlew
      run: chmod +x ./gradlew

      # =======================================================
      # NEW SECURITY STEPS START HERE
      # =======================================================
    - name: 🤫 Secret Scanning with Gitleaks
      uses: gitleaks/gitleaks-action@v2
      with:
        fail: true

    - name: ✅ Lint check
      run: ./gradlew lintDebug

    - name: 🧪 Run unit tests
      run: ./gradlew testDebugUnitTest

    - name: 🛡️ Scan for Library Vulnerabilities (OWASP)
      run: ./gradlew dependencyCheckAnalyze

      # =======================================================
      # BUILD STEP - MUST HAPPEN BEFORE SAST on the APK
      # =======================================================

    - name: 🛠️ Build APK
      run: ./gradlew assembleDebug

    - name: 🔬 Static Security Analysis on APK (SAST with MobSF)
      uses: MobSF/mobsfscan@v3
      with:
      # Scan the generated APK for more specific mobile issues
        path: 'app/build/outputs/apk/debug/app-debug.apk'

    - name: 📦 Upload APK (Optional)
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
