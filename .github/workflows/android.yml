name: Android CI & Security Scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-scan:

    runs-on: ubuntu-latest

    steps:
    - name: üîÑ Checkout code
      uses: actions/checkout@v4
      with:
      # 0 -> take all history from branchs and tags
       fetch-depth: 0

    - name: ‚òïÔ∏è Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 17

    - name: ‚öôÔ∏è Cache Gradle
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}-v2
        restore-keys: |
          gradle-${{ runner.os }}

    - name: üßº Grant execute permission for gradlew
      run: chmod +x ./gradlew

      # =======================================================
      # NEW SECURITY STEPS START HERE
      # =======================================================
    - name: ü§´ Secret Scanning with Gitleaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITLEAKS_LICENSE: ${{ secrets.GITLEAKS_LICENSE }}

    - name: ‚úÖ Lint check
      run: ./gradlew lintDebug

    - name: üß™ Run unit tests
      run: ./gradlew testDebugUnitTest

    - name: üõ°Ô∏è Scan for Library Vulnerabilities (Trivy)
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'table'
        exit-code: '1'
        severity: 'CRITICAL,HIGH'


      # =======================================================
      # MOBSF SCAN STEPS
      # =======================================================

    - name: üêç Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: üî¨ Static Security Analysis (SAST with MobSF)
      uses: MobSF/mobsfscan@main
      with:
        args: '. --json -c .mobsf'


      # =======================================================
      # BUILD STEP - MUST HAPPEN BEFORE SAST on the APK
      # =======================================================

    - name: üõ†Ô∏è Build APK
      run: ./gradlew assembleDebug

    - name: üì¶ Upload APK (Optional)
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
